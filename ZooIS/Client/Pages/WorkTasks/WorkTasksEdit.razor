@page "/worktasks/edit"

@using ZooIS.Client.Services.WorkTasksService
@inject IWorkTasksService _workTasksService
@inject NavigationManager _navigationManager
@inject IDialogService _dialogService

<PageTitle>Darbai</PageTitle>

<style>
    .mud-table-cell-custom-group {
        font-weight: 500;
    }

    .mud-table-cell-custom-group-footer {
        padding-bottom: 50px;
        text-align: right;
    }
</style>

@if (loaded)
{
    <MudTable Hover="true" Height="auto"
          Items="_workTasksService.WorkTasks"
          GroupBy="@GroupDefinition"
          GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
          GroupFooterClass="mb-4"
          Dense="true"
          MultiSelection="true"
          SelectOnRowClick="false"
          @bind-SelectedItems="SelectedItems"
          RowEditPreview="BackupItem"
          RowEditCommit="ItemCommitted"
          CanCancelEdit="true">
        <ColGroup>
            <col style="width:60px;" />
        </ColGroup>
        <GroupHeaderTemplate>
            <MudTh Class="mud-table-cell-custom-group" colspan="4">@context.Key</MudTh>
        </GroupHeaderTemplate>
        <HeaderContent>
            <MudTh></MudTh>
            <MudTh>Pavadinimas</MudTh>
            <MudTh>Sukūrimo laikas</MudTh>
            <MudTh>Užbaigta</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd></MudTd>
            <MudTd DataLabel="Pavadinimas">@context.Name</MudTd>
            <MudTd DataLabel="Sukūrimo laikas">@context.TimeCreated</MudTd>
            <MudTd DataLabel="Užbaigta">
                @(context.IsCompleted == true ? "Taip" : "Ne")
            </MudTd>
        </RowTemplate>
        <RowEditingTemplate>
            <MudTd></MudTd>
            <MudTd DataLabel="Pavadinimas">
                <MudTextField @bind-Value="elementBeforeEdit.Name" Required />
            </MudTd>
            <MudTd></MudTd>
            <MudTd DataLabel="Užbaigta">
                <MudCheckBox @bind-Checked="elementBeforeEdit.IsCompleted" Dense="true"></MudCheckBox>
            </MudTd>
        </RowEditingTemplate>
        <GroupFooterTemplate>
            <MudTh Class="mud-table-cell-custom-group mud-table-cell-custom-group-footer" colspan="4">Viso: @context.Items.Count()</MudTh>
        </GroupFooterTemplate>
        <PagerContent>
            <MudTablePager RowsPerPageString="Įrašai per puslapį" />
        </PagerContent>
    </MudTable>
    <MudButton OnClick="InitiateDeletion"
           Variant="Variant.Filled"
           Color="Color.Secondary"
           Disabled="@(@SelectedItems.Count <= 0)"
           Style="margin-top:10px;">
        Šalinti pasirinktus (@SelectedItems.Count)
    </MudButton>
}

@code {
    bool loaded;
    string searchString = string.Empty;
    protected DeleteConfirmationDialog confirmationDialog { get; set; }

    HashSet<WorkTask> SelectedItems = new();
    private WorkTask elementBeforeEdit;

    protected override async Task OnInitializedAsync()
    {
        await _workTasksService.GetWorkTasks();
        loaded = true;
    }

    private void BackupItem(object element)
    {
        elementBeforeEdit = new()
            {
                Id = ((WorkTask)element).Id,
                Name = ((WorkTask)element).Name,
                Description = ((WorkTask)element).Description,
                TimeCreated = ((WorkTask)element).TimeCreated,
                IsCompleted = ((WorkTask)element).IsCompleted
            };
    }

    private async void ItemCommitted(object element)
    {
        await _workTasksService.UpdateWorkTask(elementBeforeEdit);
        StateHasChanged();
    }

    private TableGroupDefinition<WorkTask> GroupDefinition = new()
        {
            GroupName = "Group",
            Indentation = false,
            Expandable = true,
            Selector = (e) => BoolToStringHelper(e.IsCompleted)
        };

    static string BoolToStringHelper(bool val)
    {
        if (val) return "Užbaigta";
        return "Neužbaigta";
    }

    async void InitiateDeletion()
    {
        var parameters = new DialogParameters();
        parameters.Add("BodyText", $"Pažymėta darbų: {SelectedItems.Count}. Tikrai pašalinti?");
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };
        var dialog = _dialogService.Show<ConfirmDeletionDialog>("Šalinimas", parameters, options);
        int n = await _workTasksService.DeleteWorkTasks(SelectedItems);
        StateHasChanged();
    }
}
