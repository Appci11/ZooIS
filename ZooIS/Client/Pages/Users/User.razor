@page "/user"
@page "/user/{id:int}"


@inject NavigationManager NavigationManager
@inject IUsersService UsersService
@*
@attribute [Authorize(Roles = "Admin")]
*@

@if (Id == null)
{
    <PageTitle>New user</PageTitle>
    <h3>Create a new user</h3>
}
else
{
    <PageTitle>Edit @user.Username</PageTitle>
    <h3>Edit @user.Username</h3>
}

<EditForm Model="user" OnSubmit="HandleSubmit">
    <div>
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="user.Username" class="form-control"></InputText>
    </div>
    <div>
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
    </div>
    <div>
        <label for="role">Role</label>
        <select id="role" class="form-select" @bind="user.Role">
            <option value="SysAdmin">SysAdmin</option>
            <option value="Administrator">Administrator</option>
            <option value="Maintenance">Maintenance</option>
            <option value="Visitor">Visitor</option>
        </select>
    </div>
    @if (Id != null)
    {
        <br />
        <div>
            <input id="check1" type="checkbox" @bind="user.RequestPasswordReset">
            <label for="check1">Request password reset</label><br>
        </div>
        <div>
            <input id="check2" type="checkbox" @bind="user.DeletionRequested">
            <label for="check2">Deletion requested</label><br>
        </div>
        <div>
            <input id="check3" type="checkbox" @bind="user.IsDeleted">
            <label for="check3">Is deleted</label><br>
        </div>
    }
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    @if (Id != null)
    {
        <button type="button" class="btn btn-danger" @onclick="DeleteUser">Delete</button>
    }
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    RegisteredUser user = new RegisteredUser();

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Create new user" : "Edit user";
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id != null)
        {
            user = await UsersService.GetUser((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if (Id == null)
        {
            await UsersService.CreateUser(user);
        }
        else
        {
            await UsersService.UpdateUser(user);
        }
    }

    async Task DeleteUser()
    {
        await UsersService.DeleteUser(user.Id);
    }
}