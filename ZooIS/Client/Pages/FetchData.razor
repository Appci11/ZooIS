@page "/fetchdata"

@using ZooIS.Client.Services.TicketsService;
@inject ITicketsService _ticketServce

<h3>Bilietų pirkimas</h3>
@*
<MudContainer Style="margin-top:20px;">
    <ZooIS.Client.Pages.TicketBundles.QuantityPickerComponent Text="Suaugusiojo" AmmountChanged="ValueChanged" />
</MudContainer>
*@
@if (loaded)
{
    @foreach (var item in _ticketServce.Tickets)
    {
        <MudContainer Style="margin-top:20px;">
            <ZooIS.Client.Pages.TicketBundles.QuantityPickerComponent Id="@item.Id" Text="@item.Name" AmmountChanged="ValueChanged" />
        </MudContainer>
    }
    @foreach (var item in arr)
    {
        <h5>@item</h5>
    }
}



@code {
    bool loaded;
    int[] arr = new int[0];
    Dictionary<int, int> IdNumber = new();
    Dictionary<int, double> IdPrice = new();

    //pasidaryt kopija i dictionary, tada pereit, susidet komponentus, tada bus galima skaiciuot ir t.t.
    


    protected override async Task OnInitializedAsync()
    {
        await _ticketServce.GetTickets();
        arr = new int[_ticketServce.Tickets.Count];
        loaded = true;
    }

    void ValueChanged((int, int) tup)
    {
        
    }
}
