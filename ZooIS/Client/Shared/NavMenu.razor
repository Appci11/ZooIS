@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvider

<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Pradinis</MudNavLink>
    @*<AuthorizeView Roles="SysAdmin">    </AuthorizeView>*@
    <MudNavLink Href="users" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.SupervisedUserCircle">Vartotojai</MudNavLink>
    <MudNavLink Href="map" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Map">Žemėlapis</MudNavLink>
    @*<AuthorizeView Roles="Administrator, SysAdmin, Employee">    </AuthorizeView>*@
    <MudNavLink Href="areas" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Home">Zonos</MudNavLink>
    <MudNavLink Href="tags" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Tag">Žymos</MudNavLink>
    <MudNavLink Href="habitats" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Home">Buveinės</MudNavLink>
    <MudNavLink Href="counter" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Add">Counter</MudNavLink>
    <MudNavLink Href="fetchdata" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.List">Fetch data</MudNavLink>
</MudNavMenu>

@code {
    // kol kas veikia, bet galima ir graziau
    async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("token");
        await AuthStateProvider.GetAuthenticationStateAsync();
    }
}
