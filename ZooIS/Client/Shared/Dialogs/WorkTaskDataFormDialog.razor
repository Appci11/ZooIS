<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.PostAdd" Class="mr-3 mb-n1" />
            Darbo pridėjimas
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer MaxWidth="MaxWidth.Medium">
            <EditForm Model="@dto" OnValidSubmit="Submit">
                <DataAnnotationsValidator />
                <MudSelect @bind-Value="dto.Severity" T="int" Label="Svarba" AnchorOrigin="Origin.BottomCenter">
                    @foreach (int item in Enum.GetValues(typeof(WorkTaskSeverity)))
                    {
                        <MudSelectItem Value="item">@((WorkTaskSeverity)@item)</MudSelectItem>
                    }
                </MudSelect>
                <MudSelect @bind-Value="dto.Subject" T="int" Label="Tema" AnchorOrigin="Origin.BottomCenter">
                    @foreach (int item in Enum.GetValues(typeof(WorkTaskSubject)))
                    {
                        <MudSelectItem Value="item">@((WorkTaskSubject)@item)</MudSelectItem>
                    }
                </MudSelect>
                <MudSelect @bind-Value="dto.AreaId" T="int" Label="Zonos pavadinimas" AnchorOrigin="Origin.BottomCenter">
                        @foreach (var item in Areas)
                        {
                            <MudSelectItem Value="@item.Key">@item.Value</MudSelectItem>
                        }                   
                        <MudSelectItem Value="0">Nepriklauso zonai</MudSelectItem>
                </MudSelect>
                <MudTextField @bind-Value="@dto.Name" Label="Pavadinimas" For="@(() => dto.Name)" />
                <MudTextField @bind-Value="@dto.Description" Label="Aprašymas" Lines="5" For="@(() => dto.Description)" />
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Style="margin-top:10px;">Kurti</MudButton>
            </EditForm>
        </MudContainer>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public Dictionary<int, string> Areas { get; set; }
    AddWorkTaskDto dto = new();

    protected override void OnInitialized()
    {
        DialogOptions options = new DialogOptions() { MaxWidth = MaxWidth.Small, FullWidth = true };
        MudDialog.SetOptions(options);
    }

    void Cancel() => MudDialog.Cancel();

    void Submit()
    {
        MudDialog.Close(DialogResult.Ok(dto));
    }
}
